version: "3.3"

services:

  traefik:
    image: "traefik:v3.2"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  crafty:
    container_name: crafty_container
    image: registry.gitlab.com/crafty-controller/crafty-4:4.4.4
    restart: always
    environment:
        - TZ=Etc/UTC
    ports:
        - "8443:8443" # HTTPS
        - "8123:8123" # DYNMAP
        - "19132:19132/udp" # BEDROCK
        - "25500-25600:25500-25600" # MC SERV PORT RANGE
    volumes:
        - ./docker/crafty/backups:/crafty/backups
        - ./docker/crafty/logs:/crafty/logs
        - ./docker/crafty/servers:/crafty/servers
        - ./docker/crafty/config:/crafty/app/config
        - ./docker/crafty/import:/crafty/import
    labels:
        - "traefik.enable=true"
        # ^ Use traefik on this container
        - "traefik.http.routers.crafty.rule=Host(nnci.fr)"
        # ^ Set the host URL for traefik
        - "traefik.http.services.crafty.loadbalancer.server.port=8443"
        # ^ Port that Crafty operates on is 8443
        - "traefik.http.routers.crafty.tls=true"
        # ^ Tells traefik you want to use SSL/TLS to connect to your Crafty instance
        #- "traefik.http.routers.listgartenphotography.tls.certresolver=<YOURTRAEFIKCERTRESOLVER>"
        # ^ OPTIONAL: If you want traefik to handle TLS certificates instead of Crafty,
        #   Use this label and put the name of your traefik cert resolver here.
        - "traefik.http.services.crafty.loadbalancer.server.scheme=http"
        # ^ Tell traefik to connect to Crafty via https instead of http
        - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto = http"
        # ^ Enable websockets for Crafty
    depends_on:
        - "traefik"
